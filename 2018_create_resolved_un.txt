select date_format(created,'%Y%m') 'SORTID', date_format(created,'%Y-%b') 'YEAR_MONTH', avg(CREATED1)'CREATED', avg(RESOLVED) 'RESOLVED', avg(UN_RESOLVED ) 'UNRESOLVED'
from (
SELECT 	DATE(T.CREATED) CREATED, COUNT(*) CREATED1, 
		(SELECT COUNT(*) 
        FROM 	HD_TICKET 
        WHERE 	DATE(CREATED)=DATE(T.CREATED)
        AND 	DATE(TIME_CLOSED)=DATE(CREATED)) RESOLVED,
		ROUND(AVG(((TIMESTAMPDIFF(SECOND, CREATED, TIME_CLOSED) / (24 * 60 * 60) -
		((WEEK(TIME_CLOSED) - WEEK(CREATED)) * 2) -
        (CASE WHEN WEEKDAY(TIME_CLOSED) = 6 THEN 1 ELSE 0 END) -
        (CASE WHEN WEEKDAY(CREATED) = 5 THEN 1 ELSE 0 END) -
         (SELECT COUNT(*) 
          FROM (
			SELECT '2018-01-01' HOLIDAY
			UNION 
			SELECT '2018-01-15'
			UNION 
			SELECT '2018-02-19'
			UNION 
			SELECT '2018-05-28'
			UNION 
			SELECT '2018-07-04'
			UNION 
			SELECT '2018-09-03'
			UNION 
			SELECT '2018-11-22'
			UNION 
			SELECT '2018-12-25') HOLIDAY
         WHERE HOLIDAY>=T.CREATED AND HOLIDAY<=T.TIME_CLOSED))*1440)/1440),4) MTTR,
        (SELECT COUNT(*) 
        FROM 	HD_TICKET HD, HD_STATUS S 
		WHERE 	DATE(HD.CREATED)=DATE(T.CREATED)
        AND 	HD.HD_STATUS_ID = S.ID  
		AND 	(DATE(HD.TIME_CLOSED) > DATE(HD.CREATED) OR S.STATE IN ('opened'))) UN_RESOLVED        
FROM 	HD_TICKET T  
where year(created) = year (now())
GROUP BY DATE(T.CREATED)
)a group by date_format(created,'%Y-%b')
ORDER BY SORTID Desc;